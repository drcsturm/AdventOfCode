import pandas as pd
with open("prob10_input.txt", 'r') as f:
    rawdata = f.readlines()
nums = [int(i) for i in rawdata]
nums_sorted = [0] + sorted(nums) + [max(nums) + 3]
df = pd.DataFrame({'n':nums_sorted})
df['differ'] = df.n.diff()
count1 = len(df[df.differ == 1])
count3 = len(df[df.differ == 3])
print(f"Prob 10 Part 1: {count1 * count3}")

combinations = {1:1, 2:1, 3:2, 4:4, 5:7, 6:13, 7:24}
permutations = 1
for g, dfg in df.groupby((df.n-1 != df.n.shift()).cumsum()):
    print(len(dfg), dfg.n.tolist())
    permutations *= combinations[len(dfg)]
print(f"Prob 10 Part 2: {permutations}")


"""
combination n! / (n-k)! / k!

6!/6!/0! = 1
6!/5!/1! = 6
6!/4!/2! = 15
6!/3!/3! - 4 = 20 - 4
6!/2!/4! - 9 = 15 - 9
6!/1!/5! - 6 = 6 - 6

5!/5!/0! = 1
5!/4!/1! = 5
5!/3!/2! = 10
5!/2!/3! - 3 = 10 - 3
5!/1!/4! - 4 = 5 - 4

4!/4!/0! = 1
4!/3!/1! = 4
4!/2!/2! = 6
4!/1!/3! - 2 = 4 - 2

7!/7!/0! = 1
7!/6!/1! = 7
7!/5!/2! = 21
7!/4!/3! - 5 = 35 - 5
7!/3!/4! - 6 = 35 - 6
7!/2!/5! - 7 = 21 - 7
7!/1!/6! - 8 = 7 - 8


0 3   5     8 9 10 13
0 3   5 6     9 10 13
0 3   5 6 7     10 13
0 3 4   6     9 10 13
0 3 4   6 7     10 13
0 3 4 5   7     10 13
0 3       7 8 9 10 13 *
0 3 4       8 9 10 13 *
0 3 4 5       9 10 13 *
0 3 4 5 6       10 13 *
0 3   5   7   9 10 13
0 3   5   7 8   10 13
0 3     6   8 9 10 13
0 3     6 7   9 10 13
0 3     6 7 8   10 13
0 3 4     7   9 10 13
0 3 4     7 8   10 13
0 3 4 5     8   10 13
0 3 4   6   8   10 13
0 3   5 6   8   10 13


0 3 4 5 6 7 8 9 10 13
0 3 4 5 6 7 8 9 10 13
0 3 4 5 6 7 8 9 10 13
0 3 4 5 6 7 8 9 10 13


1 + 5 + 10 + (10-3) + (5-4) + (1-1)
0 3 4 5 6 7 8 9 12
0 3   5 6 7 8 9 12
0 3 4   6 7 8 9 12
0 3 4 5   7 8 9 12
0 3 4 5 6   8 9 12
0 3 4 5 6 7   9 12

0 3     6 7 8 9 12
0 3 4     7 8 9 12
0 3 4 5     8 9 12
0 3 4 5 6     9 12
0 3   5   7 8 9 12
0 3   5 6   8 9 12
0 3   5 6 7   9 12
0 3 4   6   8 9 12
0 3 4   6 7   9 12
0 3 4 5   7   9 12

0 3     6   8 9 12
0 3     6 7   9 12
0 3 4     7   9 12
0 3   5 6     9 12
0 3   5     8 9 12
0 3   5   7   9 12
0 3 4   6     9 12
0 3       7 8 9 12 *
0 3 4       8 9 12 *
0 3 4 5       9 12 *

0 3 4         9 12 *
0 3   5       9 12 *
0 3     6     9 12
0 3       7   9 12 *
0 3         8 9 12 *
0 3           9 12 *


4!/3!/1! = 4
4!/2!/2! = 6
4!/1!/3! - 2 = 4 - 2

1 + 4 + 6 + (4-2) + (1-1) = 13
0 3 4 5 6 7 8 11
0 3   5 6 7 8 11
0 3 4   6 7 8 11
0 3 4 5   7 8 11
0 3 4 5 6   8 11

0 3     6 7 8 11
0 3 4     7 8 11
0 3 4 5     8 11
0 3   5   7 8 11
0 3   5 6   8 11
0 3 4   6   8 11

0 3 4       8 11 *
0 3   5     8 11
0 3     6   8 11
0 3       7 8 11 *
0 3         8 11 *

1 + 3 + 3 + (1-1) = 7
0 3 4 5 6 7 10
0 3 4 5   7 10
0 3 4   6 7 10
0 3   5 6 7 10
0 3 4     7 10
0 3   5   7 10
0 3     6 7 10
0 3       7 10 *

1 + 2 + 1 = 4
0 3 4 5 6 9
0 3   5 6 9
0 3 4   6 9
0 3     6 9

0 3 4 5 8
0 3   5 8

"""